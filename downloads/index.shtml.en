<!--#include virtual="/ssi/header.include" -->
<!--#include virtual="/ssi/contentheader.include" -->

<h1>Downloads</h1>
<p>
Even though Opus is now standardized by the IETF, this Opus implementation will keep
improving in the future. Of course, <b>all future versions will still be fully compliant
with the Opus IETF specification</b>. See the <a href="../development/">development</a> page
for the latest development information.
<p>

<img src="mozilla-small.png" width=145 height=100 alt="Mozilla logo" style="float:right;padding:0;"/>
<h3><strong style='font-style: italic;'>Development</strong> binary builds</h3>
In addition to <a href="https://developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements#Ogg_Opus">support in Firefox</a>, Mozilla provides binary builds of Opus utilities.
<div style="text-align:center;">
<table style="border-spacing:0;margin:2em;">
<tbody>
<tr class="vbottom"><th style="text-align:left;">Package</th>
    <th>Version</th>
    <th>Platform</th>
    <th style="text-align:left;">Download&nbsp;link</th>
    <th style="text-align:right;">Size</th>
</tr>

<tr class="vbottoml">
    <td rowspan=2 class="vbottom">opus-tools</td>
    <td rowspan=2>0.1.9</td>
    <td>Windows</td>
    <td style="text-align:left;"><a href="https://ftp.mozilla.org/pub/mozilla.org/opus/win32/opus-tools-0.1.9-win32.zip">opus-tools-0.1.9-win32.zip</a></td>
    <td style="text-align:right;">403KiB</td>
</tr>
<tr class="vbottoml">
    <td>Mac OS X</td>
    <td style="text-align:left;"><a href="https://ftp.mozilla.org/pub/mozilla.org/opus/macos/opus-tools-0.1.9-macos.tar.gz">opus-tools-0.1.9-macos.tar.gz</a></td>
    <td style="text-align:right;">399KiB</td>
</tr>
<tr class="vbottoml">
    <td>Source</td>
    <td style="text-align:left;"><a href="https://ftp.mozilla.org/pub/mozilla.org/opus/opus-tools-0.1.9.tar.gz">opus-tools-0.1.9.tar.gz</a></td>
    <td style="text-align:right;">376KiB</td>
</tr>
<tr class="vbottom">
    <td colspan=4 style="padding-left:1em;text-align:justify;">Opus-tools provides command-line utilities to
     <a href="https://mf4.xiph.org/jenkins/view/opus/job/opus-tools/ws/man/opusenc.html">encode</a>,
     <a href="https://mf4.xiph.org/jenkins/view/opus/job/opus-tools/ws/man/opusinfo.html">inspect</a>, and
     <a href="https://mf4.xiph.org/jenkins/view/opus/job/opus-tools/ws/man/opusdec.html">decode</a> <b>.</b>opus files.</td>
</tr>

<tr class="vbottoml">
    <td rowspan=2 class="vbottom">opusfile</td>
    <td rowspan=2>0.6</td>
    <td>Windows</td>
    <td style="text-align:left;"><a href="https://ftp.mozilla.org/pub/mozilla.org/opus/win32/opusfile-0.6-win32.zip">opusfile-0.6-win32.zip</a></td>
    <td style="text-align:right;">1.5MiB</td>
</tr>
<tr class="vbottoml">
    <td>Source</td>
    <td style="text-align:left;"><a href="https://ftp.mozilla.org/pub/mozilla.org/opus/opusfile-0.6.tar.gz">opusfile-0.6.tar.gz</a></td>
    <td style="text-align:right;">428KiB</td>
</tr>
<tr class="vbottom">
    <td colspan=4 style="padding-left:1em;text-align:justify;">Opusfile
     provides application developers with a high-level API for decoding and
     seeking in <b>.</b>opus files.
    DLLs for the required libraries libogg 1.3.2, libopus 1.1 and
     openssl, are also included in the binary package.</td>
</tr>

</tbody>
</table>
</div>

<h2>Source code</h2>

<h3>Latest <strong style='font-style: italic;'>stable</strong> release</h3>

<h4 id='one.1'>libopus 1.1</h4>
<p>
Opus 1.1 includes:
<ul>
         <li>new analysis code and tuning that significantly improves encoding quality, especially for variable-bitrate (VBR),</li>
         <li>automatic detection of speech or music to decide which encoding mode to use,</li>
         <li>surround with good quality at 128 kbps for 5.1 and usable down to 48 kbps, and</li>
         <li>speed improvements on all architectures, especially ARM, where decoding uses around 40% less CPU and encoding uses around 30% less CPU.</li> 
</ul>
These improvements are explained in more details in
<a href="http://people.xiph.org/~xiphmont/demo/opus/demo3.shtml">Monty's demo</a> 
(updated from the 1.1 beta demo).
</p>
<ul>
<li>Source code: <a href="http://downloads.xiph.org/releases/opus/opus-1.1.tar.gz">opus-1.1.tar.gz</a></li>
</ul>

<h4 id='one.0.3'>libopus 1.0.3</h4>
<p>
Opus 1.0.3 includes a backport of the new 1.1 surround API. Aside from that, it includes fixes for a
few minor glitches during mode switching, some minor fixed-point fixes, and fixes a regression in the FEC
code introduced in 1.0.2.
</p>
<ul>
<li>Source code: <a href="http://downloads.xiph.org/releases/opus/opus-1.0.3.tar.gz">opus-1.0.3.tar.gz</a></li>
</ul>


<h3>Latest <strong style='font-style: italic;'>development</strong> releases</h3>

<h4 id='one.1'>libopus 1.1.1-beta</h4>
<p>
This is a beta release for the upcoming 1.1.1 version. Compared to 1.1, it mostly includes optimizations
for x86, MIPS and ARM.
</p>
<ul>
<li>Source code: <a href="http://downloads.xiph.org/releases/opus/opus-1.1.1-beta.tar.gz">opus-1.1.1-beta.tar.gz</a></li>
</ul>

<h4 id='ot-0.1.9'>opus-tools 0.1.9</h4>
<p>
This release adds support for 32-bit floating point WAV output and
fixes a number of minor issues.
</p>

<ul>
<li>Source code: <a href="http://downloads.xiph.org/releases/opus/opus-tools-0.1.9.tar.gz">opus-tools-0.1.9.tar.gz</a></li>
</ul>

<h4 id='of-0.6'>opusfile 0.6</h4>
<p>
The opusfile library provides seeking, decode, and playback of Opus
streams in the Ogg container (.opus files) including over http(s) on
posix and windows systems.
</p>

<ul>
<li>Source code:
  <a href="http://downloads.xiph.org/releases/opus/opusfile-0.6.tar.gz">opusfile-0.6.tar.gz</a>
  <a href="http://downloads.xiph.org/releases/opus/opusfile-0.6.zip">opusfile-0.6.zip</a>
</li>
</ul>

<p>Changes since the v0.5 release:</p>
<ul>
<li>Fix bugs with comment handling</li>
<li>Fix build for BSD</li>
<li>Fix bugs handling invalid and non-opus streams</li>
</ul>

<p>
Some of these bugs kept basic functionality of the APIs from
working at all, so we recommend all users upgrade.
</p>




<h3><a href="older.shtml.en">Older/Historic Releases</a></h3>



<!--#include virtual="/ssi/footer.include" -->
